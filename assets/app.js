angular.module("app",["ngRoute"]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"HomeCtrl",templateUrl:"/templates/Home.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/Register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/Login.html"}).when("/barter-user-:otheruser",{controller:"BarterCtrl",templateUrl:"/templates/Barter.html"}).when("/my_items",{controller:"MyItemsCtrl",templateUrl:"/templates/MyItems.html"}).when("/brokenLink",{templateUrl:"templates/BrokenLinkError.html"}).when("/register-setup",{controller:"RegisterSetupCtrl",templateUrl:"/templates/RegisterSetUp.html"}).when("/user-settings",{controller:"UserSettings",templateUrl:"/templates/UserSettings.html"}).when("/user-settings-password",{controller:"UserSettingsPassword",templateUrl:"/templates/UserSettingsPassword.html"}).when("/postItem",{controller:"PostItemCtrl",templateUrl:"/templates/PostItem.html"}).when("/postSuccessfull-:id",{controller:"PostItemSuccessCtrl",templateUrl:"/templates/PostItemSuccess.html"}).when("/createReservation-:id",{controller:"ReservationCtrl",templateUrl:"/templates/Reservation.html"}).when("/pendingTrades",{controller:"PendingTradesCtrl",templateUrl:"/templates/PendingTrades.html"}).when("/pendingTrades-details-:id",{controller:"PendingTradesDetailsCtrl",templateUrl:"/templates/PendingTradesDetail.html"}).when("/About",{templateUrl:"/templates/About.html"}).when("/Contact",{templateUrl:"/templates/Contact.html"}).otherwise({redirectTo:"/"})}]).factory("authHttpResponseInterceptor",["$q","$location",function(e,t){return{response:function(t){return t||e.when(t)},responseError:function(n){return 401===n.status?t.path("/login"):404===n.status&&t.path("/brokenLink"),e.reject(n)}}}]).config(["$httpProvider",function(e){e.interceptors.push("authHttpResponseInterceptor")}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc",function(e,t){document.getElementById("user_h1_header");t.getUserOpenInfo("b").then(function(t){console.log(t),e.user_name=t.first_name+" "+t.last_name,e.user_trading_items=["img1","img2"]})}]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$location",function(e,t,n){e.logout=function(){t.logout(),e.currentUser=null,localStorage.clear(),n.path("/"),window.location.reload()},t.hasSession().then(function(n){n&&t.getUserAccountInfo().then(function(t){e.currentUser=t})})}]),angular.module("app").controller("BarterCtrl",["$scope","$routeParams","$location","ChatSvc","UserSvc","TradingItemSvc","OfferSvc",function(e,t,n,r,a,s,o){function i(e){var t=document.createElement("li");t.className="draggable ui-widget-content ui-corner-tr";var n=document.createElement("h5");n.className="ui-widget-header",n.innerHTML=e.name;var r=document.createElement("img");r.src=e.image.path200,r.width="96",r.height="72";var a=document.createElement("a");return a.title="Barter this image",a.className="ui-icon ui-icon-transferthick-e-w",a.innerHTML="Barter Item",t.appendChild(n),t.appendChild(r),t.appendChild(a),t.setAttribute("data",e._id),t}function l(e,t){for(x in e)if(t===e[x])return e.splice(x,1),e}function c(e,t){return e>t?[e,t]:[t,e]}function u(e){var t=["message__item message__item--bot","message message--bot"];e.author!==h.user&&e.user!=h.user||(t[0]="message__item message__item--user",t[1]="message message--user");var n=document.createElement("div");n.className="message__list";var r=document.createElement("div");r.className=t[0];var a=document.createElement("span");a.innerHTML=e.body.replace(/</g,"&lt;").replace(/>/g,"&gt;"),a.className=t[1],r.appendChild(a),n.appendChild(r),e.offerId&&(r.id=e.offerId,a.id=e.offerId),"OD"===e.special&&(a.style.color="purple"),document.getElementById("barter_message_content")&&document.getElementById("barter_message_content").appendChild(n);var s=document.getElementById("barter_message_content");s.scrollTop=s.scrollHeight}function d(){document.getElementById("barter_h4_error").style.display="block"}function m(){for(var e=document.getElementById("gallery_ul_item"),t=document.getElementById("gallery2_ul_item"),n=0;n<e.children.length;n++)e.children[n].children[2].click();for(var n=0;n<t.children.length;n++)t.children[n].children[2].click()}function f(e,n,r){var a=h.user,s=t.otheruser,o=document.createElement("div"),i=document.createElement("div"),l=document.createElement("div"),c=document.createElement("div"),u=document.createElement("div"),d=document.createElement("div");o.className="modal fade",i.className="modal-dialog",l.className="modal-content",c.className="modal-header",u.className="modal-body",d.className="modal-footer";var m=a+"'s Tradding Offer To "+s;r||(m=s+"'s Tradding Offer To "+a);var f=document.createElement("h2");f.innerHTML=m,c.appendChild(f);var p=document.createElement("div");p.className="row",u.appendChild(p);var _=document.createElement("div"),I=document.createElement("div"),v=document.createElement("div");_.className="col-md-5",I.className="col-md-2",v.className="col-md-5";var y=document.createElement("img");y.src="images/trade.png",y.style.width="50px",y.style.height="50px",g(e,h.Items_User,_),g(n,h.Items_Other_User,v),I.appendChild(y),p.appendChild(_),p.appendChild(I),p.appendChild(v);var U=document.createElement("div"),E=document.createElement("h3");E.innerHTML="Do you want to accept the offer?";var C=document.createElement("a"),b=document.createElement("a");return C.className="btn btn-default",C.setAttribute("role","button"),C.innerHTML="Yes",C.setAttribute("data-dismiss","modal"),b.className="btn btn-default",b.setAttribute("role","button"),b.setAttribute("data-dismiss","modal"),b.innerHTML="No",U.appendChild(E),U.appendChild(C),U.appendChild(b),d.appendChild(U),l.appendChild(c),l.appendChild(u),r||l.appendChild(d),i.appendChild(l),o.appendChild(i),[o,C,b,U]}function g(e,t,n){for(x in e){var r=document.createElement("img");r.src=t[e[x]].image.path200,r.style.width="100px",r.style.height="120px",r.title=t[e[x]].name,n.appendChild(r)}}function p(e,t){for(var n=0;n<e.length;n++)if(!t[e[n]])return!1;return!0}var h={};h.otherUser=t.otheruser,h.user="",h.userTag="",e.otherUser=h.otherUser,e.CurrentUserItems=null,h.UserItems=[],h.OtherUserItems=[],h.Items_User={},h.Items_Other_User={};var _=function(e,t,n){function r(t){"gallery"===e?h.UserItems.push(t.attr("data")):"gallery2"===e&&h.OtherUserItems.push(t.attr("data")),t.fadeOut(function(){var n=$("ul",i).length?$("ul",i):$("<ul class='"+e+" ui-helper-reset'/>").appendTo(i);n.attr("id",e+"_ul_item"),t.find("a.ui-icon-transferthick-e-w").remove(),t.append(c).appendTo(n).fadeIn(function(){t.animate({width:"48px"}).find("img").animate({height:"36px"})})})}function a(t){"gallery"===e?h.UserItems=l(h.UserItems,t.attr("data")):"gallery2"===e&&(h.OtherUserItems=l(h.OtherUserItems,t.attr("data"))),t.fadeOut(function(){t.find("a.ui-icon-refresh").remove().end().css("width","96px").append(u).find("img").css("height","72px").end().appendTo(o).fadeIn()})}function s(e){var t=e.attr("href"),n=e.siblings("img").attr("alt"),r=$("img[src$='"+t+"']");if(r.length)r.dialog("open");else{var a=$("<img alt='"+n+"' width='384' height='288' style='display: none; padding: 8px;' />").attr("src",t).appendTo("body");setTimeout(function(){a.dialog({title:n,width:400,modal:!0})},1)}}var o=$("#"+e),i=$("#"+t);$("li",o).draggable({cancel:"a.ui-icon",revert:"invalid",containment:"#"+n,helper:"clone",cursor:"move"}),i.droppable({accept:"#"+e+" > li",classes:{"ui-droppable-active":"ui-state-highlight"},drop:function(e,t){r(t.draggable)}}),o.droppable({accept:"#"+t+" li",classes:{"ui-droppable-active":"custom-state-active"},drop:function(e,t){a(t.draggable)}});var c="<a title='Remove this image' class='ui-icon ui-icon-refresh'>Remove Item</a>",u="<a title='Remove this image' class='ui-icon ui-icon-transferthick-e-w'>Delete image</a>";$("ul."+e+" > li").on("click",function(e){var t=$(this),n=$(e.target);return n.is("a.ui-icon-transferthick-e-w")?r(t):n.is("a.ui-icon-zoomin")?s(n):n.is("a.ui-icon-refresh")&&a(t),!1})};s.getAllUserTradingItems(t.otheruser).then(function(e){var t=document.getElementById("gallery2");for(x in e)h.Items_Other_User[e[x]._id]=e[x],e[x].traded||t.appendChild(i(e[x]));_("gallery2","trash2","containment-wrapper2")}),a.returnSessionUserName().then(function(e){var n=c(e,t.otheruser);h.userTag=n[0]+"-"+n[1],h.user=e,s.getAllUserTradingItems(e).then(function(e){var t=document.getElementById("gallery");for(x in e)h.Items_User[e[x]._id]=e[x],e[x].traded||t.appendChild(i(e[x]));_("gallery","trash","containment-wrapper")})}),r.getRecentMessages(t.otheruser).then(function(e){for(var t=e.length-1;t>=0;t--)u(e[t])});var I=io.connect("https://lit-ridge-83847.herokuapp.com"),v=document.getElementById("barter_input_message");document.getElementById("barter_input_message").addEventListener("keyup",function(e){e.preventDefault(),13==e.keyCode&&""!=v.value&&(I.emit("chat",{body:v.value,user:h.user,tag:h.userTag}),r.sendMessage(h.otherUser,v.value),v.value="")}),I.on("chat",function(e){e.tag===h.userTag&&u(e)}),e.$on("$destroy",function(){I.removeAllListeners()}),e.SubmitOffer=function(){if(document.getElementById("barter_h4_error").style.display="none",0==h.UserItems.length||0==h.OtherUserItems.length)return void d();var n=f(h.UserItems,h.OtherUserItems,!0),a={User_offer_username:h.user,User_other_username:t.otheruser,User_offer_items:h.UserItems,User_other_items:h.OtherUserItems};o.makeOffer(a).then(function(a){a.shift();var s=a[0]._id,o="See "+h.user+"'s offer to "+t.otheruser+" -: "+s.substr(s.length-5);n[0].id="modal_"+s,n[1].onclick=function(){e.redirect=!0},n[2].onclick=function(){e.redirect=!1},n[3].id="modal_footer_"+s,document.getElementById("collectionOfModals").appendChild(n[0]),I.emit("chat",{body:o,user:h.user,offerId:s,tag:h.userTag}),r.sendMessageWithOfferID(h.otherUser,o,s),m()})},e.FireModal=function(e){if("barter_message_content"!==e.target.id&&"barter_input_message"!==e.target.id&&""!=e.target.id){if(document.getElementById("modal_"+e.target.id))return void $("#modal_"+e.target.id).modal();var t=!0;o.GetOneOfferById(e.target.id).then(function(n){if(n.User_offer_username===h.user)if(t=p(n.User_offer_items,h.Items_User),t=p(n.User_other_items,h.Items_Other_User)){var a=f(n.User_offer_items,n.User_other_items,!0);a[0].id="modal_"+e.target.id,document.getElementById("collectionOfModals").appendChild(a[0]),$("#modal_"+e.target.id).modal()}else alert("Sorry items missing");else{t=p(n.User_offer_items,h.Items_Other_User),t=p(n.User_other_items,h.Items_User);var s=null;if(t){var a=null;!1===n.TransactionPending.accepted||!0===n.TransactionPending.accepted?(a=f(n.User_other_items,n.User_offer_items,!0),a[0].id="modal_"+e.target.id,document.getElementById("collectionOfModals").appendChild(a[0]),$("#modal_"+e.target.id).modal()):(a=f(n.User_other_items,n.User_offer_items,!1),a[1].onclick=function(){s=!0},a[2].onclick=function(){s=!1},a[3].id="modal_footer_"+e.target.id,a[0].id="modal_"+e.target.id,document.getElementById("collectionOfModals").appendChild(a[0]),$("#modal_"+e.target.id).modal(),$("#modal_"+e.target.id).on("hidden.bs.modal",function(e){var t=e.currentTarget.id.replace("modal_","");if(s)I.emit("chat",{body:"Offer Accepted. 👍",user:h.user,special:"OD",tag:h.userTag}),r.sendMessage(h.otherUser,"Offer Accepted. 👍"),window.location="/#/createReservation-"+t;else if(!1===s){s=null;var n={};n.offerStatus="DECLINED",n.offerId=t,o.setReservation(n).then(function(e){document.getElementById("modal_footer_"+t).remove(),I.emit("chat",{body:"Offer declined. 👎",user:h.user,special:"OD",tag:h.userTag}),r.sendMessage(h.otherUser,"Offer declined. 👎")})}}))}}})}},e.redirect=!1}]),angular.module("app").controller("HomeCtrl",["$scope","$rootScope","UserSvc","GeoSvc","TradingItemSvc",function(e,t,n,r,a){function s(){n.hasSession().then(function(t){t?n.returnSessionUserName().then(function(t){a.getItemFromCityStateAvoidUser(g,t).then(function(t){var n=g.city+", "+g.state;c(o(t),g.city,n,!0,d,e.CityItems)}),a.getAllItemsBut(t).then(function(t){console.log(t),c(t,"All Items","All Items",!1,m,e.AllItems)})}):(a.getItemFromCityState(g).then(function(t){var n=g.city+", "+g.state;c(o(t),g.city,n,!0,d,e.CityItems)}),a.getAllItems().then(function(t){c(t,"All Items","All Items",!1,m,e.AllItems)}))})}function o(e){var t=[];for(x in e)for(y in e[x])t.push(e[x][y]);return t}function i(){navigator.geolocation?navigator.geolocation.getCurrentPosition(l):e.UserCity="Geolocation is not supported by this browser."}function l(t){r.getCityState(t).then(function(t){"ERROR"==t.status?e.UserGeo=null:e.UserGeo=t;var n=JSON.stringify(t);localStorage.setItem("usr-loc",n)})}function c(e,t,n,r,a,s){var o=document.createElement("div");o.className="Home_Title",o.innerHTML=r?"Neary by Trades at City "+n+"<hr />":n+"<hr />",a.appendChild(o);var i=t.replace(/\s+/g,"_"),l=document.createElement("section");l.id="itemView-"+i,l.class="regular slider";for(x in e){s.push(e[x]);var c=document.createElement("div"),u=document.createElement("img"),d=document.createElement("p");u.src=e[x].image.path200,u.id="item-"+e[x]._id,u.setAttribute("data-toggle","modal"),u.setAttribute("data-target","#modal_"+e[x]._id),d.innerHTML=e[x].name,c.appendChild(u),c.appendChild(d),l.appendChild(c)}var m=document.createElement("div");m.id="home_near_by_"+i,m.appendChild(l),a.appendChild(m),$("#itemView-"+i).slick({arrows:!0,dots:!0,infinite:!0,slidesToShow:3,slidesToScroll:3})}function u(t){for(x in t){document.getElementById("a_"+t[x]._id).onclick=function(){e.HomeCtrlRedirect=!0},$("#modal_"+t[x]._id).on("hidden.bs.modal",function(n){var r=t[x].user;1==e.HomeCtrlRedirect&&(window.location="/#/barter-user-"+r)})}}e.UserCity="",e.CityItems=[],e.AllItems=[],e.HomeCtrlRedirect=!1;var d=document.getElementById("cityDiv"),m=document.getElementById("allItemDiv"),f=localStorage.getItem("usr-loc"),g=JSON.parse(f);e.GetLocation=function(){i()},null===g||"ERROR"===g.status?(i(),s()):(e.UserGeo=g,s()),e.SearchBar="",e.SearchItems=function(){var t=e.SearchBar;a.getSearchItem(t).then(function(n){var r=document.createElement("div");document.getElementById("Home_TargetSearchDiv").appendChild(r),e.temp=[],c(n,t,"All Items of keyword: "+t,!1,r,e.temp)})},e.$on("CityItemsDone",function(t){u(e.CityItems)}),e.$on("allItemsDone",function(t){u(e.AllItems)})}]),angular.module("app").directive("onFinishRender",["$timeout",function(e){return{restrict:"A",link:function(t,n,r){!0===t.$last&&e(function(){t.$emit(r.onFinishRender)})}}}]),angular.module("app").controller("LoginCtrl",["$scope","$location","UserSvc",function(e,t,n){function r(){e.showView=!0}e.login=function(e,a){n.login(e,a).then(function(e){if(401===e.status)return r();t.path("/"),window.location.reload()})}}]),angular.module("app").controller("MyItemsCtrl",["$scope","UserSvc","TradingItemSvc",function(e,t,n){function r(e,t){for(var n=0;n<t;n++)e+=" ";return e}t.getUserAccountInfo().then(function(t){e.Users=t,n.getAllUserTradingItems(t.username).then(function(t){for(x in t)t[x].description.length>55?t[x].description=t[x].description.substring(0,55)+"...":t[x].description=r(t[x].description,55-t[x].description.length);e.UserItems=t})})}]),angular.module("app").controller("PendingTradesCtrl",["$scope","$location","UserSvc","OfferSvc","TradingItemSvc",function(e,t,n,r,a){function s(e){var t=0;for(x in e)t++;var n=0;for(x in e)a.getItemById(x).then(function(e){n++,d.ItemMap[e._id]=e,n===t&&o()})}function o(){console.log("This hit");var e=0;for(x in d.Offers)d.Offers[x].User_offer_username===d.user.username?n.getUserOpenInfo(d.Offers[x].User_other_username).then(function(t){e++,d.UserMap[t.username]=t.user_image.path200,d.Offers.length===e&&i()}):n.getUserOpenInfo(d.Offers[x].User_offer_username).then(function(t){e++,d.UserMap[t.username]=t.user_image.path200,d.Offers.length===e&&i()})}function i(){for(x in d.Offers)d.Offers[x].User_offer_username===d.user.username?(d.Offers[x].otherPath=d.UserMap[d.Offers[x].User_other_username],d.Offers[x].otherUser=d.Offers[x].User_other_username):(d.Offers[x].otherPath=d.UserMap[d.Offers[x].User_offer_username],d.Offers[x].otherUser=d.Offers[x].User_offer_username);l(),e.User=d.user,e.Offers=d.Offers}function l(){for(x in d.Offers){var e=d.Offers[x],t=e.TransactionPending._id,n=c(d.Offers[x]);n[0].id="modal_"+t;var r=!1;n[1].onclick=function(){r=!0},document.getElementById("appendModals").appendChild(n[0]),$("#modal_"+t).on("hidden.bs.modal",function(e){if(r){var t=e.currentTarget.id.replace("modal_","");r=!1,window.location="/#/pendingTrades-details-"+t}})}}function c(e){var t=e.User_offer_username,n=e.User_other_username,r=e.User_other_items,a=e.User_offer_items,s=document.createElement("div"),o=document.createElement("div"),i=document.createElement("div"),l=document.createElement("div"),c=document.createElement("div"),m=document.createElement("div");s.className="modal fade",o.className="modal-dialog",i.className="modal-content",l.className="modal-header",c.className="modal-body",m.className="modal-footer";var f=t+"'s Tradding Offer To "+n,g=document.createElement("h2");g.innerHTML=f,l.appendChild(g);var p=document.createElement("div");p.className="row",c.appendChild(p);var h=document.createElement("div"),_=document.createElement("div"),I=document.createElement("div");h.className="col-md-5",_.className="col-md-2",I.className="col-md-5";var v=document.createElement("img");v.src="images/trade.png",v.style.width="50px",v.style.height="50px";var y=document.createElement("div"),U=document.createElement("a");return U.className="btn btn-default",U.setAttribute("role","button"),U.innerHTML="View Location and Time Details",U.setAttribute("data-dismiss","modal"),y.appendChild(U),m.appendChild(y),u(r,d.ItemMap,h),u(a,d.ItemMap,I),_.appendChild(v),p.appendChild(h),p.appendChild(_),p.appendChild(I),i.appendChild(l),i.appendChild(c),i.appendChild(m),o.appendChild(i),s.appendChild(o),[s,U]}function u(e,t,n){for(x in e){var r=document.createElement("img");r.src=t[e[x]].image.path200,r.style.width="100px",r.style.height="120px",r.title=t[e[x]].name,n.appendChild(r)}}var d={};d.ItemMap={},d.user="",d.Offers=[],d.UserMap={},d.userImg="",n.getUserAccountInfo().then(function(e){d.user=e,d.userImg=e.user_image.path200,r.GetPendingOffers(e.username).then(function(e){d.Offers=e;for(x in e){for(y in e[x].User_other_items){var t=e[x].User_other_items[y];d.ItemMap[t]=1}for(z in e[x].User_offer_items){var t=e[x].User_offer_items[z];d.ItemMap[t]=1}}s(d.ItemMap)})})}]),angular.module("app").controller("PendingTradesDetailsCtrl",["$scope","$routeParams","UserSvc","OfferSvc","ReservationSvc","TradingItemSvc",function(e,t,n,r,a,s){function o(e){r.GetOneOfferById(e).then(function(e){i(e)})}function i(t){if(t.User_offer_username===e.User.username){for(x in t.User_offer_items)s.getItemById(t.User_offer_items[x]).then(function(t){e.UserImage.push(t)});for(x in t.User_other_items)s.getItemById(t.User_offer_items[x]).then(function(t){e.OtherImage.push(t)})}else{for(x in t.User_other_items)s.getItemById(t.User_other_items[x]).then(function(t){e.UserImage.push(t)});for(x in t.User_other_items)s.getItemById(t.User_offer_items[x]).then(function(t){e.OtherImage.push(t)})}}e.User={},e.UserImage=[],e.OtherImage=[],n.getUserAccountInfo().then(function(n){e.User=n,a.getReservation(t.id).then(function(t){e.Reservation=t,$("#areapicker").locationpicker({location:t.location,radius:200,zoom:17,enableAutocomplete:!0}),o(t.offerId)})})}]),angular.module("app").controller("PostItemCtrl",["$scope","$location","UserSvc","TradingItemSvc",function(e,t,n,r){function a(e){document.getElementById("post_item_error_"+e)&&(document.getElementById("post_item_error_"+e).style.display="block")}function s(e){document.getElementById("post_item_error_"+e)&&(document.getElementById("post_item_error_"+e).style.display="none")}e.getUser="",e.name_of_item="",e.description_of_item="",n.getUserAccountInfo().then(function(t){e.getUser=t.username,e.UserId=t._id}),e.submitPost=function(){var n=!1,o=new FormData,i=$("#post_item_image")[0].files[0];o.append("image",i),null==i&&(n=!0,document.getElementById("post_item_error_image")&&(document.getElementById("post_item_error_image").style.display="block"));var l={};l.name=e.name_of_item,l.description=e.description_of_item,l.user=e.getUser,l.user_id=e.UserId;for(x in l)null===l[x]||void 0===l[x]||l[x].length<=0?(a(x),n=!0):s(x);!1===n&&(document.getElementById("post_item_submit")&&document.getElementById("post_item_submit").setAttributeNode(document.createAttribute("disabled")),document.getElementById("post_item_h3_uploading")&&(document.getElementById("post_item_h3_uploading").style.display="block"),r.addItem(l,o).then(function(e){console.log(e),t.path("/postSuccessfull-"+e._id)}))}}]),angular.module("app").controller("PostItemSuccessCtrl",["$scope","$routeParams","TradingItemSvc",function(e,t,n){e.postItemSuccess={},n.getItemById(t.id).then(function(t){e.postItemSuccess=t,console.log(t)})}]),angular.module("app").controller("RegisterCtrl",["$scope","$location","UserSvc",function(e,t,n){e.register=function(r,a,s,o,i,l,c){n.register(r,a,s,o,i,l,c).then(function(n){e.$emit("login",n),t.path("register-setup"),window.location.reload()})},e.checkUniqueUser=function(){e.register_username.length>0&&n.check_username(e.register_username).then(function(e){var t=document.getElementById("register_UserCheck");t.style.display=e?"none":"block"})},e.checkUniqueEmail=function(){e.register_EmailCheck.length>0&&n.check_email(e.register_EmailCheck).then(function(e){var t=document.getElementById("register_EmailCheck");t.style.display=e?"none":"block"})},e.register_username="",e.register_EmailCheck="",e.UniqueEmail=!0,e.UniqueUser=!0}]),angular.module("app").controller("RegisterSetupCtrl",["$scope","UserSvc",function(e,t){var n={};n.username="",n.user={},e.register_setup_userImage="images/users/blank_user.png",t.getRegisterSession(),t.getUserAccountInfo().then(function(t){n.user=t,e.register_setup_username=t.username}),e.fileUpClient=function(){document.getElementById("register_setup_next").innerHTML="Next Step"},e.continueRegister=function(){var e=new FormData,r=$("#register_setup_images_file")[0].files[0];e.append("image",r),t.SetUserProfileImage(e,n.user._id),t.destoryRegisterSession()};var r=function(){t.destoryRegisterSession()};window.onbeforeunload=r,window.onhashchange=function(e){"https://lit-ridge-83847.herokuapp.com/#/register-setup"==e.oldURL&&t.destoryRegisterSession()},$("#myCarousel").carousel({interval:2576});var a=!1;$("#myCarousel").on("click",".nav a",function(){a=!0,$(".nav li").removeClass("active"),$(this).parent().addClass("active")}).on("slid.bs.carousel",function(e){if(!a){var t=$(".nav").children().length-1,n=$(".nav li.active");console.log(t),console.log(n),n.removeClass("active").next().addClass("active");t==parseInt(n.data("slide-to"))&&$(".nav li").first().addClass("active")}a=!1})}]),angular.module("app").directive("customOnChange",function(){return{restrict:"A",link:function(e,t,n){var r=e.$eval(n.customOnChange);t.bind("change",r)}}}),angular.module("app").controller("ReservationCtrl",["$scope","$routeParams","$location","UserSvc","OfferSvc","ReservationSvc","TradingItemSvc",function(e,t,n,r,a,s,o){$(function(){$("#datepicker").datepicker({showOn:"button",buttonImage:"https://i.imgur.com/xyqM5eV.png?2",buttonImageOnly:!0,buttonText:"Pick a date"}),$("#basicExample").timepicker()}),e.reservation={},e.reservation.offerId=t.id,e.reservation.location={},e.reservation.date={},e.submitReservation=function(){var t=$("#basicExample").val(),r=$("#datepicker").val();if(e.reservation.date.time=t,e.reservation.date.day=r,""===t||""===r)return void(document.getElementById("reservation_h4_warrning").style.display="block");s.makeReservation(e.reservation).then(function(e){for(x in e.data.User_other_items)o.setTradeTrueById(e.data.User_other_items[x]);for(x in e.data.User_offer_items)o.setTradeTrueById(e.data.User_offer_items[x]);n.path("/pendingTrades")})},r.getUserAccountInfo().then(function(t){e.reservation.location.latitude=t.geocode.lat,e.reservation.location.longitude=t.geocode.lng,$("#areapicker").locationpicker({location:{latitude:t.geocode.lat,longitude:t.geocode.lng},radius:200,inputBinding:{locationNameInput:$("#address")},enableAutocomplete:!0,onchanged:function(t,n,r){e.reservation.location=t}})})}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc",function(e,t){document.getElementById("h1");t.getUserAccountInfo().then(function(t){e.User=t.username,e.userImage=t.user_image})}]),angular.module("app").controller("UserSettings",["$scope","UserSvc",function(e,t){var n={};n.formItems={},n.errorFormItems={},n.formItems.email=document.getElementById("user_settings_input_email"),n.formItems.first_name=document.getElementById("user_settings_input_first"),n.formItems.last_name=document.getElementById("user_settings_input_last"),n.formItems.username=document.getElementById("user_settings_input_username"),n.errorFormItems.username=document.getElementById("user_settings_check_username"),n.errorFormItems.email=document.getElementById("user_settings_check_email"),n.user_image=document.getElementById("user_settings_image"),n.fieldset=document.getElementById("user_settings_fieldSet"),n.containError=!1,n.originalUser={},t.getLogInSession(),t.getUserAccountInfo().then(function(e){n.originalUser=e;for(x in n.formItems)n.formItems[x].setAttribute("value",e[x]);n.fieldset.removeAttribute("disabled"),e.user_image.hasOwnProperty("default")?n.user_image.src=e.user_image.default:n.user_image.src=e.user_image.path800}),e.checkUniqueEmail=function(){n.formItems.email.value.length>0&&n.formItems.email.value!=n.originalUser.email&&t.check_email(n.formItems.email.value).then(function(e){e?(n.errorFormItems.email.style.display="none",n.containError=!1):(n.errorFormItems.email.style.display="block",n.containError=!0)})},e.checkUniqueUsername=function(){n.formItems.username.value.length>0&&n.formItems.username.value!=n.originalUser.username&&t.check_username(n.formItems.username.value).then(function(e){e?(n.errorFormItems.username.style.display="none",n.containError=!1):(n.errorFormItems.username.style.display="block",n.containError=!0)})},e.ConfirmChanges=function(){n.containError||t.updateUserContent(n.formItems.email.value,n.formItems.first_name.value,n.formItems.last_name.value,n.formItems.username.value,n.originalUser._id).then(function(e){document.getElementById("user_settings_h3_change").style.display="block"})},e.fileUploadReady=function(){document.getElementById("user_settings_submit").removeAttribute("disabled"),document.getElementById("user_settings_h4_imgUp").style.display="none"},e.submitImage=function(){var e=new FormData,r=$("#user_settings_images_input")[0].files[0];e.append("image",r);var a=document.createAttribute("disabled");document.getElementById("user_settings_submit").setAttributeNode(a),t.SetUserProfileImage(e,n.originalUser._id).then(function(e){document.getElementById("user_settings_h4_imgUp").style.display="block"})}}]),angular.module("app").directive("customOnChange",function(){return{restrict:"A",link:function(e,t,n){var r=e.$eval(n.customOnChange);t.bind("change",r)}}}),angular.module("app").controller("UserSettingsPassword",["$scope","UserSvc",function(e,t){e.updatePassword=function(){if(e.UserPassword.length>0&&e.NewPassword.length>0&&e.ConfirmNewPassword.length>0)if(document.getElementById("user_settings_password_p_success").style.display="none",e.NewPassword!=e.UserPassword&&e.ConfirmNewPassword==e.NewPassword){var n=document.createAttribute("disabled");document.getElementById("user_settings_password_btn_UP").setAttributeNode(n),document.getElementById("user_settings_password_p_matching").style.display="none",document.getElementById("user_settings_password_p_confirm").style.display="none",t.changePassword(e.UserPassword,e.NewPassword).then(function(e){200==e.status?(document.getElementById("user_settings_password_p_success").style.display="block",document.getElementById("user_settings_password_p_wrong").style.display="none",document.getElementById("user_settings_password_btn_UP").removeAttribute("disabled")):406==e.status&&(document.getElementById("user_settings_password_p_wrong").style.display="block",document.getElementById("user_settings_password_btn_UP").removeAttribute("disabled"))})}else e.NewPassword==e.UserPassword?(document.getElementById("user_settings_password_p_matching").style.display="block",console.log("pop")):e.ConfirmNewPassword!=e.NewPassword&&(document.getElementById("user_settings_password_p_confirm").style.display="block",console.log("hit"))}}]),angular.module("app").service("ChatSvc",["$http",function(e){var t=this;t.getRecentMessages=function(t){return e.get("api/chat/"+t).then(function(e){return e.data})},t.sendMessage=function(t,n){return e.post("api/chat/",{otherUser:t,body:n})},t.sendMessageWithOfferID=function(t,n,r){return e.post("api/chat/special/",{otherUser:t,body:n,offerId:r})}}]),angular.module("app").service("GeoSvc",["$http",function(e){this.getCityState=function(t){return e.get("/api/geo/"+t.coords.latitude+"-"+t.coords.longitude).then(function(e){return e.data})}}]),angular.module("app").service("OfferSvc",["$http",function(e){var t=this;t.GetAllOffersByUserName=function(t){return e.get("/api/offers/username/"+t).then(function(e){return e.data})},t.GetOneOfferById=function(t){return e.get("/api/offers/id/"+t).then(function(e){return e.data})},t.makeOffer=function(t){return e.post("/api/offers/make/",t).then(function(e){return e.data})},t.setReservation=function(t){return e.put("/api/offers/addTransactionPending/",t).then(function(e){return e})},t.GetPendingOffers=function(t){return e.get("/api/offers/pending/username/"+t).then(function(e){return e.data})}}]),angular.module("app").service("ReservationSvc",["$http","OfferSvc",function(e,t){var n=this;n.makeReservation=function(n){return e.post("/api/reservation/make/",n).then(function(e){var n=e.data;n.shift();var r={};return r.offerId=n[0].offerId,r.TransactionPendingId=n[0]._id,r.offerStatus="accepted",t.setReservation(r)})},n.declineReservation=function(){},n.getReservation=function(t){return e.get("/api/transPend/getTransPend/findOne/"+t).then(function(e){return e.data})}}]),angular.module("app").service("TradingItemSvc",["$http",function(e){var t=this;t.addItem=function(t,n){return e.post("api/trading/addItem/",t).then(function(t){return console.log(t),e.put("api/trading/updateImage/"+t.data._id,n,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){return console.log(e),e.data})})},t.getUsersTradingObjects=function(t){return e.get("api/chat/"+t).then(function(e){return e.data})},t.getAllUserTradingItems=function(t){return e.get("api/trading/getItems/"+t).then(function(e){return e.data.shift(),e.data})},t.getAllItems=function(){return e.get("api/trading/getAllItems/").then(function(e){return e.data})},t.getAllItemsBut=function(t){return e.get("api/trading/getAllItemsBut/"+t).then(function(e){return e.data})},t.getItemById=function(t){return e.get("api/trading/getItems/findOne/"+t).then(function(e){return e.data})},t.deleteItem=function(t){return e.delete("api//trading/deleteItems/"+t).then(function(e){return e})},t.editItem=function(t){return e.put("api/trading/editItems/"+t).then(function(e){return e})},t.getItemFromCityState=function(t){return e.get("api/trading/grabItemByCity-State/"+t.city+"-"+t.state).then(function(e){return"ERROR"===e.data[0].status?e.data:(e.data.shift(),e.data)})},t.getItemFromCityStateAvoidUser=function(t,n){return e.get("api/trading/grabItemByCity-State/avoid-"+n+"/"+t.city+"-"+t.state).then(function(e){return"ERROR"===e.data[0].status?e.data:(e.data.shift(),e.data)})},t.setTradeTrueById=function(t){return e.get("api/trading/setTradeTrueById/"+t).then(function(e){return e})},t.setTradeFalseById=function(t){return e.get("api/trading/setTradeFalseById/"+t).then(function(e){return e})},t.getSearchItem=function(t){
return e.get("api/itemSearch/search/"+t).then(function(e){return e.data})}}]),angular.module("app").service("UserSvc",["$http","$q",function(e,t){var n=this;n.updateUserContent=function(t,n,r,a,s){return e.post("api/users/updateUser/",{email:t,first_name:n,last_name:r,username:a,_id:s})},n.SetUserProfileImage=function(t,n){return e.post("api/users/profileImage/"+n,t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){return e.data})},n.check_username=function(t){return e.get("/api/users/checkUsername/"+t).then(function(e){return e.data})},n.check_email=function(t){return e.get("/api/users/checkEmail/"+t).then(function(e){return e.data})},n.getUser=function(){return e.get("/api/users").then(function(e){return e.data})},n.login=function(t,r){return e.post("/api/sessions",{username:t,password:r}).then(function(t){return e.defaults.headers.common["X-Auth"]=t.data,n.getUser()},function(e){return e})},n.register=function(t,r,a,s,o,i,l){return e.post("/api/users",{first_name:t,last_name:r,username:a,password:s,email:o,location:{city:i,state:l}}).then(function(e){return console.log(e),n.calculateLatLng(e.data._id,i,l),n.login(a,s)})},n.calculateLatLng=function(t,n,r){return console.log("HIT"),e.put("/api/users/updateLatLong/"+t+"-"+n+"-"+r)},n.getUserAccountInfo=function(){return e.get("/api/users/user/accountInfo").then(function(e){return e.data})},n.changePassword=function(t,n){return console.log(t,n),e.post("/api/users/user/changepassword",{password:t,new_password:n}).then(function(e){return e},function(e){return e})},n.getUserOpenInfo=function(t){return e.get("/api/users/userOpen/"+t).then(function(e){return e.data})},n.logout=function(){return e.get("/api/users/logout")},n.returnSessionUserName=function(){return e.get("/api/users/user").then(function(e){return e.data})},n.hasSession=function(){return e.get("/api/users/session").then(function(e){return e.data})},n.getLogInSession=function(){return e.get("/api/users/login/session").then(function(e){return e.data})},n.getRegisterSession=function(){return e.get("/api/users/register/session").then(function(e){return e.data})},n.destoryRegisterSession=function(){return e.post("/api/users/register/session/destroy/")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
